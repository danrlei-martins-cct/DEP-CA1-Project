scale_fill_manual(values = c("#55DDE0", "#33658A")) +
ggtitle("Ratio of People Fully Vaccinated for Total Population") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label = paste0(round(percentage, 2), "%")), position = position_stack(vjust = 0.5))
# Create a data frame for the pie chart
pie_data <- data.frame(label = c("Total Population", "Vaccinated Population"),
percentage = c(100 - percentage_vaccinated, percentage_vaccinated))
# Calculate the percentage of total population fully vaccinated
percentage_vaccinated <- (total_sum_vac_full / total_population) * 100
# Calculate total population
total_population <- sum(unique(covid_dataset$population))
# Group by country and obtain the maximum value of 'people_fully_vaccinated'
country_full_vacc <- covid_dataset %>%
group_by(country) %>%
summarize(sum_vac_full = max(people_fully_vaccinated))
# Calculate the total sum of 'people_fully_vaccinated'
total_sum_vac_full <- sum(country_full_vacc$sum_vac_full)
# Calculate the percentage of total population fully vaccinated
percentage_vaccinated <- (total_sum_vac_full / total_population) * 100
# Create a data frame for the pie chart
pie_data <- data.frame(label = c("Total Population", "Vaccinated Population"),
percentage = c(100 - percentage_vaccinated, percentage_vaccinated))
ggplot(pie_data, aes(x = "", y = percentage, fill = label)) +
geom_bar(stat = "identity", width = 0.1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +  # Removes unnecessary elements
scale_fill_manual(values = c("#55DDE0", "#33658A")) +
ggtitle("Ratio of People Fully Vaccinated for Total Population") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label = paste0(round(percentage, 2), "%")), position = position_stack(vjust = 0.5))
# Create a data frame for the pie chart
pie_data <- data.frame(label = c("Total Population", "Fully Vaccinated Population"),
percentage = c(100 - percentage_vaccinated, percentage_vaccinated))
# Plot pie chart
ggplot(pie_data, aes(x = "", y = percentage, fill = label)) +
geom_bar(stat = "identity", width = 0.1, color = "white") +
coord_polar("y", start = 0) +
theme_void() +  # Removes unnecessary elements
scale_fill_manual(values = c("#55DDE0", "#33658A")) +
ggtitle("Ratio of People Fully Vaccinated for Total Population") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_text(aes(label = paste0(round(percentage, 2), "%")), position = position_stack(vjust = 0.5))
ggplot(covid_dataset, aes(x = as.Date(date), y = 1)) +
geom_bar(stat = "identity", fill = viridis(1)) +
scale_x_date(date_labels = "%b %d, %Y", date_breaks = "3 months") +
labs(x = "Date", y = "Count", title = "COVID Vaccination Progress")
# 4. Missing Values Exploration
# Check for missing data
cat("\nMissing Data:\n")
print(colSums(is.na(covid_dataset)))
cat("\nMissing Data:\n")
print(colSums(is.na(covid_dataset)))
# Set working directory
setwd("C:/Users/danrl/OneDrive/Documents/R Programming/DEP-CA1-Project/")
# Load dataset
covid_dataset = read.csv("covid-vaccination-vs-death_ratio.csv", index=FALSE)
ggplot(covid_dataset, aes(x = as.Date(date), y = 1)) +
geom_line(color = viridis(1)) +  # Use geom_line instead of geom_bar
scale_x_date(date_labels = "%b %d, %Y", date_breaks = "3 months") +
labs(x = "Date", y = "Count", title = "COVID Vaccination Progress")
View(covid_dataset)
covid_dataset %>%
group_by(as.Date(date)) %>%
summarize(count = n()) %>%
ggplot(aes(x = as.Date(date), y = count)) +
geom_line(color = viridis(1)) +
scale_x_date(date_labels = "%b %d, %Y", date_breaks = "3 months") +
labs(x = "Date", y = "Count", title = "COVID Vaccination Progress")
# Set working directory
setwd("C:/Users/danrl/OneDrive/Documents/R Programming/DEP-CA1-Project/")
# Load dataset
covid_dataset = read.csv("covid-vaccination-vs-death_ratio.csv")
# Install and load necessary libraries
install.packages(c("ggplot2", "tidyr", "dplyr", "viridis"))
library(ggplot2)
library(tidyr)
library(dplyr)
library(viridis)
# 1. Data Overview
# Display first and last rows
cat("First 6 rows:\n")
print(head(covid_dataset))
cat("\nLast 6 rows:\n")
print(tail(covid_dataset))
# Get dimensions
cat("\nDimensions of the dataset:\n")
print(dim(covid_dataset))
# Display stats summary of dataset
cat("\nSummary of the dataset:\n")
print(summary(covid_dataset))
# 2. Data Cleaning
# Renaming column
colnames(covid_dataset)[8] <- "new_deaths"
# Drop unnecessary column
covid_dataset <- subset(covid_dataset, select = -X)
# 3. Variable Identification and Visualization
# Display structure of dataset, showing the data types
cat("\nStructure of the dataset:\n")
glimpse(covid_dataset)
# Total number of unique countries
print(length(unique(covid_dataset$country)))
install.packages(c("ggplot2", "tidyr", "dplyr", "viridis"))
covid_dataset %>%
group_by(as.Date(date)) %>%
summarize(count = n()) %>%
ggplot(aes(x = as.Date(date), y = count)) +
geom_line(color = viridis(1)) +
scale_x_date(date_labels = "%b %d, %Y", date_breaks = "3 months") +
labs(x = "Date", y = "Count", title = "COVID Vaccination Progress")
covid_dataset %>%
mutate(date = as.Date(date)) %>%  # Convert 'date' to Date class
group_by(date) %>%
summarize(count = n()) %>%
ggplot(aes(x = date, y = count)) +
geom_line(color = viridis(1)) +
scale_x_date(date_labels = "%b %d, %Y", date_breaks = "3 months") +
labs(x = "Date", y = "Count", title = "COVID Vaccination Progress")
covid_dataset %>%
mutate(date = as.Date(date)) %>%  # Convert 'date' to Date class
group_by(date) %>%
summarize(count = n()) %>%
ggplot(aes(x = date, y = count)) +
geom_line(color = viridis(1)) +
scale_x_date(date_labels = "%b %d, %Y") +
labs(x = "Date", y = "Count", title = "COVID Vaccination Progress")
covid_dataset %>%
group_by(as.Date(date)) %>%
summarize(count = n()) %>%
ggplot(aes(x = as.Date(date), y = count)) +
geom_line(color = viridis(1)) +
scale_x_date(date_labels = "%b %d, %Y") +
labs(x = "Date", y = "Count", title = "COVID Vaccination Progress")
covid_dataset %>%
mutate(date = as.Date(date)) %>%  # Convert 'date' to Date class
group_by(date) %>%
summarize(count = n()) %>%
ggplot(aes(x = date, y = count)) +
geom_line(color = viridis(1)) +
scale_x_date(date_labels = "%b %d, %Y") +
labs(x = "Date", y = "Count", title = "COVID Vaccination Time Distribution")
covid_dataset %>%
mutate(date = as.Date(date)) %>%  # Convert 'date' to Date class
group_by(date) %>%
summarize(count = n()) %>%
ggplot(aes(x = date, y = count)) +
geom_line(color = viridis(1)) +
scale_x_date(date_labels = "%b %d, %Y") +
labs(x = "Date", y = "Count", title = "Discrete Variable (date) Distribution")
glimpse(covid_dataset)
# Create a bubble chart
bubble_chart <- ggplot(covid_dataset, aes(x = date, y = country, size = total_vaccinations)) +
geom_point(alpha = 0.7, color = "blue") +
scale_size_continuous(range = c(3, 15)) +  # Adjust the size range of bubbles
labs(title = "Bubble Chart for Total Vaccinations by Country",
x = "Date", y = "Country", size = "Total Vaccinations") +
theme_minimal()
# Print the chart
print(bubble_chart)
# Group by country and summarize total vaccinations
grouped_data <- covid_dataset %>%
group_by(country) %>%
summarise(total_vaccinations = sum(total_vaccinations, na.rm = TRUE))
# Create a bubble chart
bubble_chart <- ggplot(grouped_data, aes(x = country, y = total_vaccinations, size = total_vaccinations)) +
geom_point(alpha = 0.7, color = "blue") +
scale_size_continuous(range = c(3, 15)) +  # Adjust the size range of bubbles
labs(title = "Bubble Chart for Total Vaccinations by Country",
x = "Country", y = "Total Vaccinations") +
theme_minimal()
# Print the chart
print(bubble_chart)
# Create a bar chart
bar_chart <- ggplot(covid_dataset, aes(x = total_vaccinations, y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8)) +  # Adjust font size for better readability
# Print the chart
print(bar_chart)
# Create a bar chart
bar_chart <- ggplot(covid_dataset, aes(x = total_vaccinations, y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8)) +  # Adjust font size for better readability
print(bar_chart)
bar_chart <- ggplot(covid_dataset, aes(x = total_vaccinations, y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8)) +  # Adjust font size for better readability
bar_chart = ggplot(covid_dataset,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8)) +
print(bar_chart)
bar_chart = ggplot(covid_dataset,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
print(bar_chart)
grouped_data <- covid_dataset %>%
group_by(country) %>%
summarise(total_vaccinations = sum(total_vaccinations, na.rm = TRUE))
View(grouped_data)
# Create a bar chart
bar_chart = ggplot(grouped_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
print(bar_chart)
# Modify the code to select the top 50 countries by total vaccinations
top_50_data <- covid_dataset %>%
group_by(country) %>%
summarise(total_vaccinations = sum(total_vaccinations, na.rm = TRUE)) %>%
top_n(50, total_vaccinations)
# Create a bar chart with the top 50 countries
bar_chart_top_50 <- ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Top 50 Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
print(bar_chart_top_50)
# Set working directory
setwd("C:/Users/danrl/OneDrive/Documents/R Programming/DEP-CA1-Project/")
# Load dataset
covid_dataset = read.csv("covid-vaccination-vs-death_ratio.csv")
# Install and load necessary libraries
install.packages(c("ggplot2", "tidyr", "dplyr", "viridis"))
library(ggplot2)
library(tidyr)
library(dplyr)
library(viridis)
# 1. Data Overview
# Display first and last rows
cat("First 6 rows:\n")
print(head(covid_dataset))
cat("\nLast 6 rows:\n")
print(tail(covid_dataset))
# Get dimensions
cat("\nDimensions of the dataset:\n")
print(dim(covid_dataset))
# Display stats summary of dataset
cat("\nSummary of the dataset:\n")
print(summary(covid_dataset))
# 2. Data Cleaning
# Renaming column
colnames(covid_dataset)[8] <- "new_deaths"
# Drop unnecessary column
covid_dataset <- subset(covid_dataset, select = -X)
# 3. Variable Identification and Visualization
# Display structure of dataset, showing the data types
cat("\nStructure of the dataset:\n")
glimpse(covid_dataset)
# Total number of unique countries
print(length(unique(covid_dataset$country)))
# Categorical variable - country
# Select the top 50 countries by total vaccinations (as dataset contains 197)
top_50_data <- covid_dataset %>%
group_by(country) %>%
summarise(total_vaccinations = sum(total_vaccinations, na.rm = TRUE)) %>%
top_n(50, total_vaccinations)
# Create a bar chart with the top 50 countries
bar_chart_top_50 <- ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Top 50 Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
print(bar_chart_top_50)
install.packages(c("ggplot2", "tidyr", "dplyr", "viridis"))
View(bar_chart_top_50)
# Create a bar chart with the top 50 countries
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Top 50 Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
View(top_50_data)
# Display structure of dataset, showing the data types
cat("\nStructure of the dataset:\n")
glimpse(covid_dataset)
str(covid_dataset)
cat("\nStructure of the dataset:\n")
str(covid_dataset)
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Bar Chart for Top 50 Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Bar Chart for Top 50 Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = total_vaccinations), hjust = -0.1, size = 3) +  # Add data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(labels = scales::comma()) +  # Format x-axis labels
coord_flip()  # Convert to horizontal bar chart
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = total_vaccinations), hjust = -0.1, size = 3) +  # Add data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(labels = scales::comma()) +  # Format x-axis labels
coord_flip()  # Convert to horizontal bar chart
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = total_vaccinations), hjust = -0.1, size = 3) +  # Add data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(labels = scales::comma) +  # Corrected scales::comma()
coord_flip()  # Convert to horizontal bar chart
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = total_vaccinations), hjust = -0.1, size = 3) +  # Add data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
plot.title = element_text(hjust = 0.5)) +
scale_x_continuous(labels = scales::comma())
ggplot(top_50_data,
aes(x = reorder(country, total_vaccinations),
y = total_vaccinations)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = total_vaccinations), vjust = -0.5, size = 3, color = "black") +  # Add data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Country", y = "Total Vaccinations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Rotate x-axis labels for better readability
plot.title = element_text(hjust = 0.5))
View(bar_chart_top_50)
View(top_50_data)
ggplot(top_50_data,
aes(x = reorder(country, total_vaccinations),
y = total_vaccinations)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = label_si()(total_vaccinations)), vjust = -0.5, size = 3, color = "black") +  # Add formatted data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Country", y = "Total Vaccinations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Rotate x-axis labels for better readability
plot.title = element_text(hjust = 0.5))
ggplot(top_50_data,
aes(x = reorder(country, total_vaccinations),
y = total_vaccinations)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = label_si()(total_vaccinations)), vjust = -0.5, size = 3, color = "black") +  # Add formatted data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Country", y = "Total Vaccinations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Rotate x-axis labels for better readability
plot.title = element_text(hjust = 0.5))
library(scales)
ggplot(top_50_data,
aes(x = reorder(country, total_vaccinations),
y = total_vaccinations)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = label_si()(total_vaccinations)), vjust = -0.5, size = 3, color = "black") +  # Add formatted data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Country", y = "Total Vaccinations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Rotate x-axis labels for better readability
plot.title = element_text(hjust = 0.5))
ggplot(top_50_data,
aes(x = reorder(country, total_vaccinations),
y = total_vaccinations)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = scales::comma_format()(total_vaccinations, scale = 1e-6)), vjust = -0.5, size = 3, color = "black") +  # Add formatted data labels in millions
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Country", y = "Total Vaccinations (in millions)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Rotate x-axis labels for better readability
plot.title = element_text(hjust = 0.5))
ggplot(top_50_data,
aes(x = reorder(country, total_vaccinations),
y = total_vaccinations)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = total_vaccinations), vjust = -0.5, size = 3, color = "black") +  # Add data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Country", y = "Total Vaccinations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Rotate x-axis labels for better readability
plot.title = element_text(hjust = 0.5))
top_50_data.head()
top_50_data
# Convert the total_vaccinations column to millions
top_50_data$total_vaccinations <- top_50_data$total_vaccinations / 1e6
# Print the modified tibble
top_50_data
View(top_50_data)
ggplot(top_50_data,
aes(x = reorder(country, total_vaccinations),
y = total_vaccinations)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_text(aes(label = total_vaccinations), vjust = -0.5, size = 3, color = "black") +  # Add data labels
labs(title = "Top 50 Countries by Total Vaccinations",
subtitle = "Data as of [Insert Date]",
x = "Country", y = "Total Vaccinations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8),  # Rotate x-axis labels for better readability
plot.title = element_text(hjust = 0.5))
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Bar Chart for Top 50 Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
# Assuming your ggplot code is named gg_bar_chart
gg_bar_chart +
scale_x_continuous(labels = scales::comma_format(scale = 1e-6),  # Use comma format and scale to millions
breaks = seq(0, max(top_50_data$total_vaccinations), by = 1e6)) +  # Set breaks in millions
labs(subtitle = "Top 50 countries by total vaccinations",  # Add a subtitle
caption = "Data source: Your Source") +  # Add a caption with data source
theme(legend.position = "bottom",       # Move the legend to the bottom
legend.direction = "horizontal",  # Display legend horizontally
legend.box = "horizontal",        # Use a horizontal legend box
legend.title.align = 0.5,         # Center-align legend title
legend.text = element_text(size = 8),  # Adjust text size in the legend
plot.title = element_text(hjust = 0.5),  # Center-align plot title
plot.subtitle = element_text(hjust = 0.5),  # Center-align subtitle
plot.caption = element_text(hjust = 0.5))  # Center-align caption
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Bar Chart for Top 50 Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country",
subtitle = "Top 50 countries by total vaccinations",
caption = "Data source: Your Source") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8),
legend.position = "bottom",       # Move the legend to the bottom
legend.direction = "horizontal",  # Display legend horizontally
legend.box = "horizontal",        # Use a horizontal legend box
legend.title.align = 0.5,         # Center-align legend title
legend.text = element_text(size = 8),  # Adjust text size in the legend
plot.title = element_text(hjust = 0.5),  # Center-align plot title
plot.subtitle = element_text(hjust = 0.5),  # Center-align subtitle
plot.caption = element_text(hjust = 0.5))  # Center-align caption +
scale_x_continuous(labels = scales::comma_format(scale = 1e-6),  # Use comma format and scale to millions
breaks = seq(0, max(top_50_data$total_vaccinations), by = 1e6))  # Set breaks in millions
ggplot(top_50_data,
aes(x = total_vaccinations,
y = reorder(country, total_vaccinations))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Bar Chart for Top 50 Total Vaccinations by Country",
x = "Total Vaccinations", y = "Country") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8))
